#!/bin/bash
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -exuo pipefail

export DEBIAN_FRONTEND=noninteractive
export DBUS_SESSION_BUS_ADDRESS=/dev/null

_skip_install() {
dpkg -l | grep '^ii.*'$1 && [ -z ${pkg_upgrade:-''} ]
}

# elasticsearch
wait_elastic() {
elastic=0
while [ $elastic -eq 0 ]
do
curl -s "http://localhost:$1" 2>&1 > /dev/null \
&& elastic=1 \
|| echo "waiting for elastic..."
sleep .5
done
}


sudo locale-gen en_US.UTF-8
sudo update-locale LANGUAGE=en_US.UTF-8
sudo update-locale LANG=en_US.UTF-8
sudo update-locale LC_ALL=en_US.UTF-8

sudo apt-get -y purge elasticsearch

ELASTICSEARCH56_CONF=/etc/init.d/elasticsearch56
if [ ! -f "$ELASTICSEARCH56_CONF" ]; then

curl -L -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.0.deb
sudo dpkg -i elasticsearch-5.6.0.deb

sudo mv /etc/init.d/elasticsearch /etc/init.d/elasticsearch56
sed -i "s/Provides:          elasticsearch/Provides:          elasticsearch56/g" /etc/init.d/elasticsearch56
sed -i "s/NAME=elasticsearch/NAME=elasticsearch56/g" /etc/init.d/elasticsearch56
sed -i "s/Elasticsearch Server/Elasticsearch v5.6.0 Server/g" /etc/init.d/elasticsearch56
sed -i 's/\/var\/run\/elasticsearch/\/var\/run\/elasticsearch56/g' /etc/init.d/elasticsearch56

sudo mv /etc/default/elasticsearch /etc/default/elasticsearch56
sudo mv /usr/share/elasticsearch /usr/share/elasticsearch56
sudo mv /var/log/elasticsearch /var/log/elasticsearch56
sudo mv /var/lib/elasticsearch /var/lib/elasticsearch56
sudo mv /usr/lib/systemd/system/elasticsearch.service /usr/lib/systemd/system/elasticsearch56.service

cat <<EOF > /usr/lib/systemd/system/elasticsearch56.service
[Unit]
Description=Elasticsearch56
Documentation=http://www.elastic.co
Wants=network-online.target
After=network-online.target

[Service]
Environment=ES_HOME=/usr/share/elasticsearch56
Environment=CONF_DIR=/etc/elasticsearch56
Environment=DATA_DIR=/var/lib/elasticsearch56
Environment=LOG_DIR=/var/log/elasticsearch56
Environment=PID_DIR=/var/run/elasticsearch56
EnvironmentFile=-/etc/default/elasticsearch56

WorkingDirectory=/usr/share/elasticsearch56

User=elasticsearch
Group=elasticsearch

ExecStartPre=/usr/share/elasticsearch56/bin/elasticsearch-systemd-pre-exec

ExecStart=/usr/share/elasticsearch56/bin/elasticsearch \
                                                -p \${PID_DIR}/elasticsearch56.pid \
                                                --quiet \
                                                -Edefault.path.logs=\${LOG_DIR} \
                                                -Edefault.path.data=\${DATA_DIR} \
                                                -Edefault.path.conf=\${CONF_DIR}

# StandardOutput is configured to redirect to journalctl since
# some error messages may be logged in standard output before
# elasticsearch logging system is initialized. Elasticsearch
# stores its logs in /var/log/elasticsearch and does not use
# journalctl by default. If you also want to enable journalctl
# logging, you can simply remove the "quiet" option from ExecStart.
StandardOutput=journal
StandardError=inherit

# Specifies the maximum file descriptor number that can be opened by this process
LimitNOFILE=65536

# Specifies the maximum number of processes
LimitNPROC=2048

# Specifies the maximum size of virtual memory
LimitAS=infinity

# Specifies the maximum file size
LimitFSIZE=infinity

# Disable timeout logic and wait until process is stopped
TimeoutStopSec=0

# SIGTERM signal is used to stop the Java process
KillSignal=SIGTERM

# Send the signal only to the JVM rather than its control group
KillMode=process

# Java process is never killed
SendSIGKILL=no

# When a JVM receives a SIGTERM signal it exits with code 143
SuccessExitStatus=143

[Install]
WantedBy=multi-user.target

# Built for distribution-5.6.0 (distribution)

EOF

sudo mv /etc/elasticsearch /etc/elasticsearch56
sudo mv /run/elasticsearch /run/elasticsearch56

# tune elasticsearch56
cfg='/etc/elasticsearch56/elasticsearch.yml'
[ -f "${cfg}.bak" ] || mv $cfg $cfg.bak
es_backups=/var/tmp/elasticsearch56
if [ ! -d "$es_backups" ]; then
mkdir $es_backups
chown elasticsearch:elasticsearch $es_backups
fi

cat <<EOF > $cfg
cluster.name: publisher
node.name: node-1
http.port: 9204
node.data: true
transport.host: localhost
transport.tcp.port: 9304
network.host: 0.0.0.0
network.bind_host: 0.0.0.0
node.local: true
discovery.zen.ping.multicast: false
path.repo: $es_backups
index.number_of_replicas: 0
EOF

sudo systemctl enable elasticsearch56.service
sudo systemctl restart elasticsearch56.service
wait_elastic "9204"

curl -s -XPUT 'http://localhost:9204/_snapshot/backups' \
-d '{"type": "fs", "settings": {"location": "'$es_backups'"}}'
unset cfg es_backups

fi

sudo mv /var/lib/dpkg/info/elasticsearch.* /tmp
sudo apt-get -y update

ELASTICSEARCH24_CONF=/etc/init.d/elasticsearch24
if [ ! -f "$ELASTICSEARCH24_CONF" ]; then

wget --continue https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/deb/elasticsearch/2.4.6/elasticsearch-2.4.6.deb
wget https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/deb/elasticsearch/2.4.6/elasticsearch-2.4.6.deb.sha1 -O elasticsearch-2.4.6.deb.sha1
echo "  elasticsearch-2.4.6.deb" >>elasticsearch-2.4.6.deb.sha1
sha1sum -c elasticsearch-2.4.6.deb.sha1 && dpkg -i elasticsearch-2.4.6.deb

sudo mv /etc/init.d/elasticsearch /etc/init.d/elasticsearch24
sed -i "s/Provides:          elasticsearch/Provides:          elasticsearch24/g" /etc/init.d/elasticsearch24
sed -i "s/NAME=elasticsearch/NAME=elasticsearch24/g" /etc/init.d/elasticsearch24
sed -i "s/Elasticsearch Server/Elasticsearch v2.4 Server/g" /etc/init.d/elasticsearch24
sed -i 's/\/var\/run\/elasticsearch/\/var\/run\/elasticsearch24/g' /etc/init.d/elasticsearch24

sudo mv /etc/default/elasticsearch /etc/default/elasticsearch24
sudo mv /usr/share/elasticsearch /usr/share/elasticsearch24
sudo mv /var/log/elasticsearch /var/log/elasticsearch24
sudo mv /var/lib/elasticsearch /var/lib/elasticsearch24
sudo mv /usr/lib/systemd/system/elasticsearch.service /usr/lib/systemd/system/elasticsearch24.service

cat <<EOF > /usr/lib/systemd/system/elasticsearch24.service
[Unit]
Description=Elasticsearch24
Documentation=http://www.elastic.co
Wants=network-online.target
After=network-online.target

[Service]
Environment=ES_HOME=/usr/share/elasticsearch24
Environment=CONF_DIR=/etc/elasticsearch24
Environment=DATA_DIR=/var/lib/elasticsearch24
Environment=LOG_DIR=/var/log/elasticsearch24
Environment=PID_DIR=/var/run/elasticsearch24
EnvironmentFile=-/etc/default/elasticsearch24

WorkingDirectory=/usr/share/elasticsearch24

User=elasticsearch
Group=elasticsearch

ExecStartPre=/usr/share/elasticsearch24/bin/elasticsearch-systemd-pre-exec

ExecStart=/usr/share/elasticsearch24/bin/elasticsearch \
                                                -Des.pidfile=\${PID_DIR}/elasticsearch.pid \
                                                -Des.default.path.home=\${ES_HOME} \
                                                -Des.default.path.logs=\${LOG_DIR} \
                                                -Des.default.path.data=\${DATA_DIR} \
                                                -Des.default.path.conf=\${CONF_DIR}

StandardOutput=journal
StandardError=inherit

# Specifies the maximum file descriptor number that can be opened by this process
LimitNOFILE=65536

# Specifies the maximum number of bytes of memory that may be locked into RAM
# Set to "infinity" if you use the 'bootstrap.memory_lock: true' option
# in elasticsearch.yml and 'MAX_LOCKED_MEMORY=unlimited' in /etc/default/elasticsearch
#LimitMEMLOCK=infinity

# Disable timeout logic and wait until process is stopped
TimeoutStopSec=0

# SIGTERM signal is used to stop the Java process
KillSignal=SIGTERM

# Java process is never killed
SendSIGKILL=no

# When a JVM receives a SIGTERM signal it exits with code 143
SuccessExitStatus=143

[Install]
WantedBy=multi-user.target

# Built for Distribution: Deb-2.4.6 (deb)

EOF

sudo mv /etc/elasticsearch /etc/elasticsearch24
sudo mv /run/elasticsearch /run/elasticsearch24

# tune elasticsearch
cfg='/etc/elasticsearch24/elasticsearch.yml'
[ -f "${cfg}.bak" ] || mv $cfg $cfg.bak
es_backups=/var/tmp/elasticsearch24
if [ ! -d "$es_backups" ]; then
mkdir $es_backups
chown elasticsearch:elasticsearch $es_backups
fi

cat <<EOF > $cfg
cluster.name: superdesk
node.name: node-1
http.port: 9200
node.data: true
transport.host: localhost
transport.tcp.port: 9300
network.host: 0.0.0.0
network.bind_host: 0.0.0.0
node.local: true
discovery.zen.ping.multicast: false
path.repo: $es_backups
index.number_of_replicas: 0
EOF

sudo systemctl enable elasticsearch24.service
sudo systemctl restart elasticsearch24.service
wait_elastic "9200"

curl -s -XPUT 'http://localhost:9200/_snapshot/backups' \
-d '{"type": "fs", "settings": {"location": "'$es_backups'"}}'
unset cfg es_backups

fi

sudo mv /var/lib/dpkg/info/elasticsearch.* /tmp
sudo apt-get -y update
sudo apt-get -y install --no-install-recommends openjdk-8-jre-headless
